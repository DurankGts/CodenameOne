package com.codename1.samples;


import static com.codename1.ui.CN.*;
import com.codename1.ui.Display;
import com.codename1.ui.Form;
import com.codename1.ui.Dialog;
import com.codename1.ui.Label;
import com.codename1.ui.plaf.UIManager;
import com.codename1.ui.util.Resources;
import com.codename1.io.Log;
import com.codename1.ui.Toolbar;
import java.io.IOException;
import com.codename1.ui.layouts.BoxLayout;
import com.codename1.io.NetworkEvent;
import com.codename1.media.Media;
import com.codename1.media.MediaManager;
import com.codename1.ui.Button;

/**
 * This file was generated by <a href="https://www.codenameone.com/">Codename One</a> for the purpose 
 * of building native mobile applications using Java.
 */
public class TestNativePlayerMode2972 {

    private Form current;
    private Resources theme;

    public void init(Object context) {
        // use two network threads instead of one
        updateNetworkThreadCount(2);

        theme = UIManager.initFirstTheme("/theme");

        // Enable Toolbar on all Forms by default
        Toolbar.setGlobalToolbar(true);

        // Pro only feature
        Log.bindCrashProtection(true);

        addNetworkErrorListener(err -> {
            // prevent the event from propagating
            err.consume();
            if(err.getError() != null) {
                Log.e(err.getError());
            }
            Log.sendLogAsync();
            Dialog.show("Connection Error", "There was a networking error in the connection to " + err.getConnectionRequest().getUrl(), "OK", null);
        });        
    }
    
    public void start() {
        if(current != null){
            current.show();
            return;
        }
        Form f = new Form("NativePlayerMode Test");
        f.setLayout(BoxLayout.y());
        
        Button playButton = new Button("Play Video");
        playButton.addActionListener(e->{
            String videoPath;
            if (isSimulator()) {
                videoPath = "http://www.codenameone.com/files/hello-codenameone.mp4";
            } else {
                videoPath = "https://www.codenameone.com/files/hello-codenameone.mp4";
            }
            try {
                Media video = MediaManager.createMedia(videoPath, true);
                video.setNativePlayerMode(true); // this works nicely on iOS 12, I didn't test other iOS versions yet
                video.prepare();
                video.setFullScreen(true);
                video.play();
            } catch (Exception ex) {
                Log.e(ex);
            }
        });
        f.add(playButton);
        f.show();
        
        
    }

    public void stop() {
        current = getCurrentForm();
        if(current instanceof Dialog) {
            ((Dialog)current).dispose();
            current = getCurrentForm();
        }
    }
    
    public void destroy() {
    }

}
